syntax = "proto3";
option go_package = ".;rpc";

service UsersService {
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDReply) {}

  rpc CheckToken(CheckTokenRequest) returns (CheckTokenReply) {}
  rpc CheckTokenWithUserReturned(CheckTokenWithUserReturnedRequest) returns (CheckTokenWithUserReturnedReply) {}

  rpc CheckTokenIsBrokerGroupWithManagedCompanyIds(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedCompanyIdsReply) {}
  rpc CheckTokenIsBrokerGroupWithManagedUserIds(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedUserIdsReply) {}
  rpc CheckTokenIsBrokerGroupWithManagedUsersDropdown(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedUsersDropdownReply) {}
  rpc CheckTokenIsBrokerGroup(CheckTokenRequest) returns (CheckTokenIsBrokerGroupReply) {}

  rpc CheckTokenIsSuperAdmin(CheckTokenRequest) returns (CheckTokenIsSuperAdminReply) {}

  rpc CheckTokenIsPlantationGroupWithUserAndCompany(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyReply) {}
  rpc CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDs(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDsReply) {}
  rpc CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdown(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdownReply) {}

  rpc CheckTokenIsClientGroupWithUserAndCompany(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyReply) {}
  rpc CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDs(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDsReply) {}
  rpc CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdown(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdownReply) {}

  rpc GetCompanyByID(GetCompanyByIDRequest) returns (GetCompanyByIDReply) {}
  rpc GetCompanyUsersByID(GetCompanyUsersByIDRequest) returns (GetCompanyUsersByIDReply) {}
  rpc GetCompaniesByCountry(GetCompaniesByCountryRequest) returns (GetCompaniesByCountryReply) {}

  rpc GetBrokerCommissionByID(GetBrokerCommissionByIDRequest) returns (GetBrokerCommissionByIDReply) {}

  rpc DecodeToken(DecodeTokenRequest) returns (DecodeTokenReply) {}
}

message GetUserByIDRequest {
  string ID = 1;
}

message GetCompaniesByCountryRequest {
  string country = 1;
}

message GetCompaniesByCountryReply {
  repeated Company companies = 1;
}

message GetBrokerCommissionByIDRequest {
  string companyID = 1;
}

message GetBrokerCommissionByIDReply {
  int32 commission = 1;
}

message CheckTokenRequest {
  string token = 1;
}

message GetUserByIDReply {
  string Email = 1;
}

message CheckTokenWithUserReturnedRequest {
  string token = 1;
}

message CheckTokenWithUserReturnedReply {
  string userID = 1;
  bool isValid = 2;
}

message GetCompanyByIDRequest {
  string CompanyID = 1;
}

message GetCompanyUsersByIDRequest {
  string CompanyID = 1;
}

message GetCompanyByIDReply {
  string ID = 1;
  string LegalName = 2;
  string CommercialName = 3;
  string Country = 4;
  string RegNumber = 5;
  string LegalAddress = 6;
  string RealAddress = 7;
  string Phone = 8;
  string Email = 9;
  string Site = 10;
  string HandlerID = 11;
  TruckInfo TruckInfo = 12;
}

message TruckInfo {
  string title = 1;
  string phone = 2;
  string contact_name = 3;
}

message GetCompanyUsersByIDReply {
  repeated string IDs = 1;
}

message CheckTokenReply {
  bool isValid = 1;
  string userID = 2;
  int32 group = 3;
  int32 role = 4;
}

message CheckTokenIsSuperAdminReply {
  bool isValid = 1;
  string userID = 2;
  string firstName = 3;
  string lastName = 4;
  int32 group = 5;
  int32 role = 6;
}

message CheckTokenIsBrokerGroupReply {
  bool isValid = 1;
  string userID = 2;
  string firstName = 3;
  string lastName = 4;
  int32 group = 5;
  int32 role = 6;
}

message CheckTokenIsBrokerGroupWithManagedCompanyIdsReply {
  bool isValid = 1;
  string userID = 2;
  string firstName = 3;
  string lastName = 4;
  int32 group = 5;
  int32 role = 6;
  repeated string managedIds = 7;
}

message CheckTokenIsBrokerGroupWithManagedUserIdsReply {
  bool isValid = 1;
  string userID = 2;
  string firstName = 3;
  string lastName = 4;
  int32 group = 5;
  int32 role = 6;
  repeated string managedIds = 7;
}

message CheckTokenIsBrokerGroupWithManagedUsersDropdownReply {
  bool isValid = 1;
  string userID = 2;
  string firstName = 3;
  string lastName = 4;
  int32 group = 5;
  int32 role = 6;
  repeated DropdownUser managedUsers = 7;
}


message CheckTokenIsPlantationGroupWithUserAndCompanyReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
}

message CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDsReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
  repeated string UserIDs = 4;
}

message CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdownReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
  repeated DropdownUser managedUsers = 4;
}

message CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDsReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
  repeated string UserIDs = 4;
}

message CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdownReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
  repeated DropdownUser managedUsers = 4;
}

message CheckTokenIsClientGroupWithUserAndCompanyReply {
  bool isValid = 1;
  User user = 2;
  Company company = 3;
}

message User {
  string ID = 1;
  string firstName = 2;
  string lastName = 3;
  int32 group = 4;
  int32 role = 5;
  string email = 6;
}

message Company {
  string ID = 1;
  string LegalName = 2;
  string CommercialName = 3;
}

message DropdownUser {
  string ID = 1;
  string Name = 2;
  string CompanyName = 3;
}

message DecodeTokenRequest {
  string token = 1;
}

message DecodeTokenReply {
  string userID = 1;
}