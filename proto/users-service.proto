syntax = "proto3";

option go_package = "rpc/users;users";

service UsersService {
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDReply);
  rpc CheckToken(CheckTokenRequest) returns (CheckTokenReply);
  rpc CheckTokenWithUserReturned(CheckTokenWithUserReturnedRequest) returns (CheckTokenWithUserReturnedReply);
  rpc CheckTokenIsBrokerGroupWithManagedCompanyIds(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedCompanyIdsReply);
  rpc CheckTokenIsBrokerGroupWithManagedUserIds(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedUserIdsReply);
  rpc CheckTokenIsBrokerGroupWithManagedUsersDropdown(CheckTokenRequest) returns (CheckTokenIsBrokerGroupWithManagedUsersDropdownReply);
  rpc CheckTokenIsBrokerGroup(CheckTokenRequest) returns (CheckTokenIsBrokerGroupReply);
  rpc CheckTokenIsSuperAdmin(CheckTokenRequest) returns (CheckTokenIsSuperAdminReply);
  rpc CheckTokenIsPlantationGroupWithUserAndCompany(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyReply);
  rpc CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDs(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDsReply);
  rpc CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdown(CheckTokenRequest) returns (CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdownReply);
  rpc CheckTokenIsClientGroupWithUserAndCompany(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyReply);
  rpc CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDs(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDsReply);
  rpc CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdown(CheckTokenRequest) returns (CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdownReply);
  rpc GetCompanyByID(GetCompanyByIDRequest) returns (GetCompanyByIDReply);
  rpc GetCompanyUsersByID(GetCompanyUsersByIDRequest) returns (GetCompanyUsersByIDReply);
  rpc GetCompaniesByCountry(GetCompaniesByCountryRequest) returns (GetCompaniesByCountryReply);
  rpc GetBrokerCommissionByID(GetBrokerCommissionByIDRequest) returns (GetBrokerCommissionByIDReply);
  rpc DecodeToken(DecodeTokenRequest) returns (DecodeTokenReply);

  rpc GetAllPlantation(GetPlantationsRequest) returns (GetPlantationsReply);
}

message GetUserByIDRequest {
  string id = 1;
}

message GetPlantationsReply {
  string id = 1;
  string legal_name = 2;
  string commercial_name = 3;
  string country = 4;
}

message GetPlantationsRequest {
  int32 type = 1;
}

message GetCompaniesByCountryRequest {
  string country = 1;
}

message GetCompaniesByCountryReply {
  repeated Company companies = 1;
}

message GetBrokerCommissionByIDRequest {
  string company_id = 1;
}

message GetBrokerCommissionByIDReply {
  int32 commission = 1;
}

message CheckTokenRequest {
  string token = 1;
}

message GetUserByIDReply {
  string email = 1;
  string manager_id = 2;
  string manager_company_id =3;
}

message CheckTokenWithUserReturnedRequest {
  string token = 1;
}

message CheckTokenWithUserReturnedReply {
  string user_id = 1;
  bool is_valid = 2;
}

message GetCompanyByIDRequest {
  string company_id = 1;
}

message GetCompanyUsersByIDRequest {
  string company_id = 1;
}

message GetCompanyByIDReply {
  string id = 1;
  string legal_name = 2;
  string commercial_name = 3;
  string country = 4;
  string reg_number = 5;
  string legal_address = 6;
  string real_address = 7;
  string phone = 8;
  string email = 9;
  string site = 10;
  string handler_id = 11;
  TruckInfo truck_info = 12;
  string cargo_name = 13;
}

message TruckInfo {
  string title = 1;
  string phone = 2;
  string contact_name = 3;
}

message GetCompanyUsersByIDReply {
  repeated string ids = 1;
}

message CheckTokenReply {
  bool is_valid = 1;
  string user_id = 2;
  int32 group = 3;
  int32 role = 4;
}

message CheckTokenIsSuperAdminReply {
  bool is_valid = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  int32 group = 5;
  int32 role = 6;
}

message CheckTokenIsBrokerGroupReply {
  bool is_valid = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  int32 group = 5;
  int32 role = 6;
}

message CheckTokenIsBrokerGroupWithManagedCompanyIdsReply {
  bool is_valid = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  int32 group = 5;
  int32 role = 6;
  repeated string managed_ids = 7;
}

message CheckTokenIsBrokerGroupWithManagedUserIdsReply {
  bool is_valid = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  int32 group = 5;
  int32 role = 6;
  repeated string managed_ids = 7;
}

message CheckTokenIsBrokerGroupWithManagedUsersDropdownReply {
  bool is_valid = 1;
  string user_id = 2;
  string first_name = 3;
  string last_name = 4;
  int32 group = 5;
  int32 role = 6;
  repeated DropdownUser managed_users = 7;
}

message CheckTokenIsPlantationGroupWithUserAndCompanyReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  User manager = 5;
  Company manager_company = 6;
}

message CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUserIDsReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  repeated string user_ids = 4;
  User manager = 5;
  Company manager_company = 6;
}

message CheckTokenIsPlantationGroupWithUserAndCompanyAndCompanyUsersDropdownReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  repeated DropdownUser managed_users = 4;
  User manager = 5;
  Company manager_company = 6;
}

message CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUserIDsReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  repeated string user_ids = 4;
  User manager = 5;
  Company manager_company = 6;
}

message CheckTokenIsClientGroupWithUserAndCompanyAndCompanyUsersDropdownReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  repeated DropdownUser managed_users = 4;
  User manager = 5;
  Company manager_company = 6;
}

message CheckTokenIsClientGroupWithUserAndCompanyReply {
  bool is_valid = 1;
  User user = 2;
  Company company = 3;
  User manager = 5;
  Company manager_company = 6;
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  int32 group = 4;
  int32 role = 5;
  string email = 6;
}

message Company {
  string id = 1;
  string legal_name = 2;
  string commercial_name = 3;
  string handler_id = 4;
  string cargo_name = 5;
  int32 broker_commission = 6;
}

message DropdownUser {
  string id = 1;
  string name = 2;
  string company_name = 3;
}

message DecodeTokenRequest {
  string token = 1;
}

message DecodeTokenReply {
  string user_id = 1;
}
